<?php
/**
 * StateMachineStateJsonApiRelationships
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * OpenAPI spec version: 6.4.7.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.31
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * StateMachineStateJsonApiRelationships Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StateMachineStateJsonApiRelationships implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StateMachineStateJsonApi_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'state_machine' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsStateMachine',
'from_state_machine_transitions' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineTransitions',
'to_state_machine_transitions' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineTransitions',
'order_transactions' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderTransactions',
'order_deliveries' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderDeliveries',
'orders' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrders',
'to_state_machine_history_entries' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineHistoryEntries',
'from_state_machine_history_entries' => '\Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineHistoryEntries'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'state_machine' => null,
'from_state_machine_transitions' => null,
'to_state_machine_transitions' => null,
'order_transactions' => null,
'order_deliveries' => null,
'orders' => null,
'to_state_machine_history_entries' => null,
'from_state_machine_history_entries' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'state_machine' => 'stateMachine',
'from_state_machine_transitions' => 'fromStateMachineTransitions',
'to_state_machine_transitions' => 'toStateMachineTransitions',
'order_transactions' => 'orderTransactions',
'order_deliveries' => 'orderDeliveries',
'orders' => 'orders',
'to_state_machine_history_entries' => 'toStateMachineHistoryEntries',
'from_state_machine_history_entries' => 'fromStateMachineHistoryEntries'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'state_machine' => 'setStateMachine',
'from_state_machine_transitions' => 'setFromStateMachineTransitions',
'to_state_machine_transitions' => 'setToStateMachineTransitions',
'order_transactions' => 'setOrderTransactions',
'order_deliveries' => 'setOrderDeliveries',
'orders' => 'setOrders',
'to_state_machine_history_entries' => 'setToStateMachineHistoryEntries',
'from_state_machine_history_entries' => 'setFromStateMachineHistoryEntries'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'state_machine' => 'getStateMachine',
'from_state_machine_transitions' => 'getFromStateMachineTransitions',
'to_state_machine_transitions' => 'getToStateMachineTransitions',
'order_transactions' => 'getOrderTransactions',
'order_deliveries' => 'getOrderDeliveries',
'orders' => 'getOrders',
'to_state_machine_history_entries' => 'getToStateMachineHistoryEntries',
'from_state_machine_history_entries' => 'getFromStateMachineHistoryEntries'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['state_machine'] = isset($data['state_machine']) ? $data['state_machine'] : null;
        $this->container['from_state_machine_transitions'] = isset($data['from_state_machine_transitions']) ? $data['from_state_machine_transitions'] : null;
        $this->container['to_state_machine_transitions'] = isset($data['to_state_machine_transitions']) ? $data['to_state_machine_transitions'] : null;
        $this->container['order_transactions'] = isset($data['order_transactions']) ? $data['order_transactions'] : null;
        $this->container['order_deliveries'] = isset($data['order_deliveries']) ? $data['order_deliveries'] : null;
        $this->container['orders'] = isset($data['orders']) ? $data['orders'] : null;
        $this->container['to_state_machine_history_entries'] = isset($data['to_state_machine_history_entries']) ? $data['to_state_machine_history_entries'] : null;
        $this->container['from_state_machine_history_entries'] = isset($data['from_state_machine_history_entries']) ? $data['from_state_machine_history_entries'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets state_machine
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsStateMachine
     */
    public function getStateMachine()
    {
        return $this->container['state_machine'];
    }

    /**
     * Sets state_machine
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsStateMachine $state_machine state_machine
     *
     * @return $this
     */
    public function setStateMachine($state_machine)
    {
        $this->container['state_machine'] = $state_machine;

        return $this;
    }

    /**
     * Gets from_state_machine_transitions
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineTransitions
     */
    public function getFromStateMachineTransitions()
    {
        return $this->container['from_state_machine_transitions'];
    }

    /**
     * Sets from_state_machine_transitions
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineTransitions $from_state_machine_transitions from_state_machine_transitions
     *
     * @return $this
     */
    public function setFromStateMachineTransitions($from_state_machine_transitions)
    {
        $this->container['from_state_machine_transitions'] = $from_state_machine_transitions;

        return $this;
    }

    /**
     * Gets to_state_machine_transitions
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineTransitions
     */
    public function getToStateMachineTransitions()
    {
        return $this->container['to_state_machine_transitions'];
    }

    /**
     * Sets to_state_machine_transitions
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineTransitions $to_state_machine_transitions to_state_machine_transitions
     *
     * @return $this
     */
    public function setToStateMachineTransitions($to_state_machine_transitions)
    {
        $this->container['to_state_machine_transitions'] = $to_state_machine_transitions;

        return $this;
    }

    /**
     * Gets order_transactions
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderTransactions
     */
    public function getOrderTransactions()
    {
        return $this->container['order_transactions'];
    }

    /**
     * Sets order_transactions
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderTransactions $order_transactions order_transactions
     *
     * @return $this
     */
    public function setOrderTransactions($order_transactions)
    {
        $this->container['order_transactions'] = $order_transactions;

        return $this;
    }

    /**
     * Gets order_deliveries
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderDeliveries
     */
    public function getOrderDeliveries()
    {
        return $this->container['order_deliveries'];
    }

    /**
     * Sets order_deliveries
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrderDeliveries $order_deliveries order_deliveries
     *
     * @return $this
     */
    public function setOrderDeliveries($order_deliveries)
    {
        $this->container['order_deliveries'] = $order_deliveries;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrders
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsOrders $orders orders
     *
     * @return $this
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets to_state_machine_history_entries
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineHistoryEntries
     */
    public function getToStateMachineHistoryEntries()
    {
        return $this->container['to_state_machine_history_entries'];
    }

    /**
     * Sets to_state_machine_history_entries
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsToStateMachineHistoryEntries $to_state_machine_history_entries to_state_machine_history_entries
     *
     * @return $this
     */
    public function setToStateMachineHistoryEntries($to_state_machine_history_entries)
    {
        $this->container['to_state_machine_history_entries'] = $to_state_machine_history_entries;

        return $this;
    }

    /**
     * Gets from_state_machine_history_entries
     *
     * @return \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineHistoryEntries
     */
    public function getFromStateMachineHistoryEntries()
    {
        return $this->container['from_state_machine_history_entries'];
    }

    /**
     * Sets from_state_machine_history_entries
     *
     * @param \Swagger\Client\Model\StateMachineStateJsonApiRelationshipsFromStateMachineHistoryEntries $from_state_machine_history_entries from_state_machine_history_entries
     *
     * @return $this
     */
    public function setFromStateMachineHistoryEntries($from_state_machine_history_entries)
    {
        $this->container['from_state_machine_history_entries'] = $from_state_machine_history_entries;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
